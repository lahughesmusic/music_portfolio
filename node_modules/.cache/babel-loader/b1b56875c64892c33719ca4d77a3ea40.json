{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongList.js\";\n\nvar React = require('react/addons');\n\nvar DropDownButton = require(\"react-bootstrap/DropDownButton\");\n\nvar SongItem = require(\"./SongItem\");\n\nvar SongFormatterMixin = require(\"./../mixins/SongFormatterMixin\");\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n  mixins: [SongFormatterMixin],\n  render: function () {\n    var songs = [];\n    var currentSongIndex = this.props.currentSongIndex;\n    var isPlaying = this.props.isPlaying;\n    var isPause = this.props.isPause;\n    var songCount = this.props.songs.length;\n    songs = this.props.songs.map(function (song, index) {\n      var songName = this.getSongName(song);\n      var songName = songCount > 1 ? index + 1 + \". \" + songName : songName;\n      return React.createElement(SongItem, {\n        currentSongIndex: currentSongIndex,\n        eventKey: index,\n        name: songName,\n        isPlaying: isPlaying,\n        isPause: isPause,\n        onSongItemClick: this.props.onSongItemClick.bind(null, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }, this);\n    return React.createElement(\"div\", {\n      className: \"audio-songs-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(DropDownButton, {\n      ref: \"dropdownButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, songs));\n  },\n  hideDropdownMenu: function () {\n    this.refs.dropdownButton.setDropdownState(false);\n  }\n});","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongList.js"],"names":["React","require","DropDownButton","SongItem","SongFormatterMixin","module","exports","createClass","mixins","render","songs","currentSongIndex","props","isPlaying","isPause","songCount","length","map","song","index","songName","getSongName","onSongItemClick","bind","hideDropdownMenu","refs","dropdownButton","setDropdownState"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,gCAAD,CAA5B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,gCAAD,CAAhC;;AAEAI,MAAM,CAACC,OAAP,GAAiBN,KAAK,CAACO,WAAN,CAAkB;AAAA;AAElCC,EAAAA,MAAM,EAAE,CAAEJ,kBAAF,CAF0B;AAIlCK,EAAAA,MAAM,EAAE,YAAW;AAElB,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWD,gBAAlC;AACA,QAAIE,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;AACA,QAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAzB;AACA,QAAIC,SAAS,GAAG,KAAKH,KAAL,CAAWF,KAAX,CAAiBM,MAAjC;AAEAN,IAAAA,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAX,CAAiBO,GAAjB,CAAqB,UAASC,IAAT,EAAeC,KAAf,EAAqB;AAEjD,UAAIC,QAAQ,GAAG,KAAKC,WAAL,CAAiBH,IAAjB,CAAf;AACA,UAAIE,QAAQ,GAAGL,SAAS,GAAG,CAAZ,GAAiBI,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqBC,QAArC,GAAgDA,QAA/D;AAEA,aAAO,oBAAC,QAAD;AAAU,QAAA,gBAAgB,EAAET,gBAA5B;AACI,QAAA,QAAQ,EAAEQ,KADd;AAEI,QAAA,IAAI,EAAEC,QAFV;AAGI,QAAA,SAAS,EAAEP,SAHf;AAII,QAAA,OAAO,EAAEC,OAJb;AAKI,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWU,eAAX,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCJ,KAAtC,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMA,KAXO,EAWL,IAXK,CAAR;AAaA,WACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACET,KADF,CADD,CADD;AAOA,GAhCiC;AAkClCc,EAAAA,gBAAgB,EAAE,YAAW;AAC5B,SAAKC,IAAL,CAAUC,cAAV,CAAyBC,gBAAzB,CAA0C,KAA1C;AACA;AApCiC,CAAlB,CAAjB","sourcesContent":["var React = require('react/addons');\nvar DropDownButton = require(\"react-bootstrap/DropDownButton\");\nvar SongItem = require(\"./SongItem\");\nvar SongFormatterMixin = require(\"./../mixins/SongFormatterMixin\");\n\nmodule.exports = React.createClass({\n\n\tmixins: [ SongFormatterMixin ],\n\n\trender: function() {\n\n\t\tvar songs = [];\n\t\tvar currentSongIndex = this.props.currentSongIndex;\n\t\tvar isPlaying = this.props.isPlaying;\n\t\tvar isPause = this.props.isPause;\n\t\tvar songCount = this.props.songs.length;\n\n\t\tsongs = this.props.songs.map(function(song, index){\n\n\t\t\tvar songName = this.getSongName(song);\n\t\t\tvar songName = songCount > 1 ? (index + 1) + \". \" + songName : songName;\n\n\t\t\treturn <SongItem currentSongIndex={currentSongIndex} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\teventKey={index} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={songName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPlaying={isPlaying} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPause={isPause} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSongItemClick={this.props.onSongItemClick.bind(null, index)} /> ;\n\t\t}, this);\n\n\t\treturn (\n\t\t\t<div className=\"audio-songs-list\">\n\t\t\t\t<DropDownButton ref=\"dropdownButton\">\n\t\t\t\t\t{songs}\n\t\t\t\t</DropDownButton>\n\t\t\t</div>\n\t\t);\n\t},\n\n\thideDropdownMenu: function() {\n\t\tthis.refs.dropdownButton.setDropdownState(false);\n\t}\n\n})"]},"metadata":{},"sourceType":"module"}