{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongItem.js\";\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\n\nvar React = require(\"react/addons\");\n\nvar classnames = require(\"classnames\");\n\nvar MenuItem = require(\"react-bootstrap/MenuItem\");\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n  render: function () {\n    var currentSongIndex = this.props.currentSongIndex;\n    var isSelected = this.props.currentSongIndex == this.props.eventKey;\n    var components = [];\n\n    if (isSelected && this.props.isPlaying) {\n      components[0] = React.createElement(Glyphicon, {\n        className: \"audio-song-item-icon active\",\n        glyph: \"play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    } else {\n      components[0] = React.createElement(\"span\", {\n        className: \"audio-song-item-not-selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }\n\n    components[1] = React.createElement(\"span\", {\n      className: \"audio-song-item-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.name);\n    var classes = classnames({\n      \"audio-song-item\": true,\n      active: isSelected\n    });\n    return React.createElement(MenuItem, {\n      className: classes,\n      eventKey: this.props.eventKey,\n      onClick: this.props.onSongItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, components);\n  }\n});","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongItem.js"],"names":["Glyphicon","React","require","classnames","MenuItem","module","exports","createClass","render","currentSongIndex","props","isSelected","eventKey","components","isPlaying","name","classes","active","onSongItemClick"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,+BAAtB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBL,KAAK,CAACM,WAAN,CAAkB;AAAA;AACjCC,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWD,gBAAlC;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWD,gBAAX,IAA+B,KAAKC,KAAL,CAAWE,QAA3D;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAIF,UAAU,IAAI,KAAKD,KAAL,CAAWI,SAA7B,EAAwC;AACtCD,MAAAA,UAAU,CAAC,CAAD,CAAV,GACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,6BAArB;AAAmD,QAAA,KAAK,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAIO;AACLA,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD;;AAEDA,IAAAA,UAAU,CAAC,CAAD,CAAV,GACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKH,KAAL,CAAWK,IAApD,CADF;AAIA,QAAIC,OAAO,GAAGb,UAAU,CAAC;AACvB,yBAAmB,IADI;AAEvBc,MAAAA,MAAM,EAAEN;AAFe,KAAD,CAAxB;AAKA,WACE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEK,OADb;AAEE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWE,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWQ,eAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGL,UALH,CADF;AASD;AAhCgC,CAAlB,CAAjB","sourcesContent":["import Glyphicon from \"react-bootstrap/lib/Glyphicon\";\n\nvar React = require(\"react/addons\");\nvar classnames = require(\"classnames\");\nvar MenuItem = require(\"react-bootstrap/MenuItem\");\n\nmodule.exports = React.createClass({\n  render: function() {\n    var currentSongIndex = this.props.currentSongIndex;\n    var isSelected = this.props.currentSongIndex == this.props.eventKey;\n    var components = [];\n\n    if (isSelected && this.props.isPlaying) {\n      components[0] = (\n        <Glyphicon className=\"audio-song-item-icon active\" glyph=\"play\" />\n      );\n    } else {\n      components[0] = <span className=\"audio-song-item-not-selected\"></span>;\n    }\n\n    components[1] = (\n      <span className=\"audio-song-item-label\">{this.props.name}</span>\n    );\n\n    var classes = classnames({\n      \"audio-song-item\": true,\n      active: isSelected\n    });\n\n    return (\n      <MenuItem\n        className={classes}\n        eventKey={this.props.eventKey}\n        onClick={this.props.onSongItemClick}\n      >\n        {components}\n      </MenuItem>\n    );\n  }\n});\n"]},"metadata":{},"sourceType":"module"}