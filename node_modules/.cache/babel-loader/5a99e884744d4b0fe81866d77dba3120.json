{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/src/components/Listen/Listen.js\";\nimport React, { Component } from \"react\";\nimport Marquee from \"./listenComponents/Marquee\";\nimport Mp3Button from \"./listenComponents/Mp3Button\";\nimport AudioPlayer from \"./listenComponents/AudioPlayer\";\nimport \"./functions.js\";\nimport \"./listen.css\";\nimport musicData from \"./music_data\";\nimport musicDataSort from \"./sort\";\nexport default class Listen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mp3path: \"https://song-253.s3.amazonaws.com/\",\n      mp3name: \"SELECT ANY TRACK.mp3\",\n      mp3artist: \"Lea Hughes\",\n      audiopath: \"https://song-253.s3.amazonaws.com/8_2.mp3\",\n      mp3autoplay: \"autoPlay\",\n      mp3genre: \"\",\n      soundwaveCssClass: \"soundwave-hidden\",\n      currentButtonId: 0,\n      clickedButtonId: \"\",\n      mp3Data: [],\n      restartTimer: \"no\"\n    };\n  }\n\n  componentWillMount() {\n    var mp3title = this.state.mp3name;\n    mp3title = mp3title.replace(\".mp3\", \"\");\n    this.changeMP3 = this.changeMP3.bind(this);\n    this.setState(state => ({\n      mp3title: mp3title,\n      audiopath: state.mp3path + state.mp3name,\n      mp3Data: musicData.sort((a, b) => {\n        var a1 = a.name.toLowerCase();\n        var b1 = b.name.toLowerCase();\n        return a1 < b1 ? -1 : a1 > b1 ? 1 : 0;\n      })\n    }));\n  }\n\n  changeMP3(currentButtonId, genre, name, artist) {\n    var mp3title = name;\n    var mp3name = name;\n    mp3title = mp3title.replace(\".mp3\", \"\").replaceAll(\"_\", \" \").toUpperCase();\n    this.setState(state => ({\n      audiopath: state.mp3path + mp3name,\n      mp3title: mp3title,\n      mp3artist: artist,\n      mp3genre: genre,\n      soundwaveCssClass: \"soundwave\",\n      currentButtonId: currentButtonId,\n      clickedButtonId: currentButtonId\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"audio-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.title), React.createElement(Marquee, {\n      mp3artist: this.state.mp3artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.mp3title), React.createElement(\"section\", {\n      className: \"mp3list-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.mp3Data.map((mp3, index) => React.createElement(Mp3Button, {\n      key: index,\n      changeMP3: this.changeMP3,\n      clickedButtonId: this.state.mp3name,\n      mp3: mp3.name,\n      artist: mp3.artist,\n      genre: mp3.genre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(AudioPlayer, {\n      audiopath: this.state.audiopath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/src/components/Listen/Listen.js"],"names":["React","Component","Marquee","Mp3Button","AudioPlayer","musicData","musicDataSort","Listen","constructor","props","state","mp3path","mp3name","mp3artist","audiopath","mp3autoplay","mp3genre","soundwaveCssClass","currentButtonId","clickedButtonId","mp3Data","restartTimer","componentWillMount","mp3title","replace","changeMP3","bind","setState","sort","a","b","a1","name","toLowerCase","b1","genre","artist","replaceAll","toUpperCase","render","title","map","mp3","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Marquee from \"./listenComponents/Marquee\";\nimport Mp3Button from \"./listenComponents/Mp3Button\";\nimport AudioPlayer from \"./listenComponents/AudioPlayer\";\nimport \"./functions.js\";\nimport \"./listen.css\";\nimport musicData from \"./music_data\";\nimport musicDataSort from \"./sort\";\n\nexport default class Listen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mp3path: \"https://song-253.s3.amazonaws.com/\",\n      mp3name: \"SELECT ANY TRACK.mp3\",\n      mp3artist: \"Lea Hughes\",\n      audiopath: \"https://song-253.s3.amazonaws.com/8_2.mp3\",\n      mp3autoplay: \"autoPlay\",\n      mp3genre: \"\",\n      soundwaveCssClass: \"soundwave-hidden\",\n      currentButtonId: 0,\n      clickedButtonId: \"\",\n      mp3Data: [],\n      restartTimer: \"no\"\n    };\n  }\n\n  componentWillMount() {\n    var mp3title = this.state.mp3name;\n    mp3title = mp3title.replace(\".mp3\", \"\");\n    this.changeMP3 = this.changeMP3.bind(this);\n    this.setState(state => ({\n      mp3title: mp3title,\n      audiopath: state.mp3path + state.mp3name,\n      mp3Data: musicData.sort((a, b) => {\n        var a1 = a.name.toLowerCase();\n        var b1 = b.name.toLowerCase();\n        return a1 < b1 ? -1 : a1 > b1 ? 1 : 0;\n      })\n    }));\n  }\n\n  changeMP3(currentButtonId, genre, name, artist) {\n    var mp3title = name;\n    var mp3name = name;\n    mp3title = mp3title\n      .replace(\".mp3\", \"\")\n      .replaceAll(\"_\", \" \")\n      .toUpperCase();\n\n    this.setState(state => ({\n      audiopath: state.mp3path + mp3name,\n      mp3title: mp3title,\n      mp3artist: artist,\n      mp3genre: genre,\n      soundwaveCssClass: \"soundwave\",\n      currentButtonId: currentButtonId,\n      clickedButtonId: currentButtonId\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"audio-container\">\n        <h1>{this.props.title}</h1>\n        <Marquee mp3artist={this.state.mp3artist}>\n          {this.state.mp3title}\n        </Marquee>\n        <section className=\"mp3list-buttons\">\n          {this.state.mp3Data.map((mp3, index) => (\n            <Mp3Button\n              key={index}\n              changeMP3={this.changeMP3}\n              clickedButtonId={this.state.mp3name}\n              mp3={mp3.name}\n              artist={mp3.artist}\n              genre={mp3.genre}\n            />\n          ))}\n        </section>\n        <AudioPlayer audiopath={this.state.audiopath} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}