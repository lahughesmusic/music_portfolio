{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/ButtonPanel.js\";\nimport Glyphicon from \"react-bootstrap\";\n\nvar React = require(\"react/addons\");\n\nvar Button = require(\"react-bootstrap/Button\");\n\nvar ButtonGroup = require(\"react-bootstrap/ButtonGroup\");\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n  getDefaultProps: function () {\n    return {\n      currentSongIndex: 0,\n      songCount: 0\n    };\n  },\n  render: function () {\n    var isPlaying = this.props.isPlaying;\n    var isPause = this.props.isPause;\n    var isLoading = this.props.isLoading;\n    var isShowPlayBtn = !isPlaying || isPause;\n    var buttonClickHandler = isShowPlayBtn ? this.props.onPlayBtnClick : this.props.onPauseBtnClick;\n    var iconName;\n    var iconClasses = \"\";\n\n    if (isLoading) {\n      iconName = \"refresh\";\n      iconClasses = \"audio-refresh-animate\";\n    } else {\n      iconName = isShowPlayBtn ? \"play\" : \"pause\";\n    }\n\n    var songIndex = this.props.currentSongIndex;\n    var buttonPanelClasses = \"audio-button-panel pull-left\";\n\n    if (this.props.songCount < 2) {\n      return React.createElement(ButtonGroup, {\n        className: buttonPanelClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: buttonClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        className: iconClasses,\n        glyph: iconName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    } else {\n      var nextButtonClass = songIndex == this.props.songCount - 1 ? \"disabled\" : \"\";\n      return React.createElement(ButtonGroup, {\n        className: buttonPanelClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: this.props.onPrevBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        glyph: \"step-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: buttonClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        className: iconClasses,\n        glyph: iconName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: this.props.onNextBtnClick,\n        className: nextButtonClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        glyph: \"step-forward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }\n});","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/ButtonPanel.js"],"names":["Glyphicon","React","require","Button","ButtonGroup","module","exports","createClass","getDefaultProps","currentSongIndex","songCount","render","isPlaying","props","isPause","isLoading","isShowPlayBtn","buttonClickHandler","onPlayBtnClick","onPauseBtnClick","iconName","iconClasses","songIndex","buttonPanelClasses","nextButtonClass","onPrevBtnClick","onNextBtnClick"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,iBAAtB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,6BAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAiBL,KAAK,CAACM,WAAN,CAAkB;AAAA;AACjCC,EAAAA,eAAe,EAAE,YAAW;AAC1B,WAAO;AACLC,MAAAA,gBAAgB,EAAE,CADb;AAELC,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID,GANgC;AAQjCC,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,QAAIE,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;AACA,QAAIC,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAA3B;AACA,QAAIC,aAAa,GAAG,CAACJ,SAAD,IAAcE,OAAlC;AACA,QAAIG,kBAAkB,GAAGD,aAAa,GAClC,KAAKH,KAAL,CAAWK,cADuB,GAElC,KAAKL,KAAL,CAAWM,eAFf;AAGA,QAAIC,QAAJ;AACA,QAAIC,WAAW,GAAG,EAAlB;;AAEA,QAAIN,SAAJ,EAAe;AACbK,MAAAA,QAAQ,GAAG,SAAX;AACAC,MAAAA,WAAW,GAAG,uBAAd;AACD,KAHD,MAGO;AACLD,MAAAA,QAAQ,GAAGJ,aAAa,GAAG,MAAH,GAAY,OAApC;AACD;;AAED,QAAIM,SAAS,GAAG,KAAKT,KAAL,CAAWJ,gBAA3B;AACA,QAAIc,kBAAkB,GAAG,8BAAzB;;AAEA,QAAI,KAAKV,KAAL,CAAWH,SAAX,GAAuB,CAA3B,EAA8B;AAC5B,aACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEa,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAEN,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEI,WAAtB;AAAmC,QAAA,KAAK,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD,KARD,MAQO;AACL,UAAII,eAAe,GACjBF,SAAS,IAAI,KAAKT,KAAL,CAAWH,SAAX,GAAuB,CAApC,GAAwC,UAAxC,GAAqD,EADvD;AAGA,aACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEa,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWY,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAER,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEI,WAAtB;AAAmC,QAAA,KAAK,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,OADT;AAEE,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWa,cAFtB;AAGE,QAAA,SAAS,EAAEF,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAPF,CADF;AAiBD;AACF;AA3DgC,CAAlB,CAAjB","sourcesContent":["import Glyphicon from \"react-bootstrap\";\nvar React = require(\"react/addons\");\nvar Button = require(\"react-bootstrap/Button\");\nvar ButtonGroup = require(\"react-bootstrap/ButtonGroup\");\n\nmodule.exports = React.createClass({\n  getDefaultProps: function() {\n    return {\n      currentSongIndex: 0,\n      songCount: 0\n    };\n  },\n\n  render: function() {\n    var isPlaying = this.props.isPlaying;\n    var isPause = this.props.isPause;\n    var isLoading = this.props.isLoading;\n    var isShowPlayBtn = !isPlaying || isPause;\n    var buttonClickHandler = isShowPlayBtn\n      ? this.props.onPlayBtnClick\n      : this.props.onPauseBtnClick;\n    var iconName;\n    var iconClasses = \"\";\n\n    if (isLoading) {\n      iconName = \"refresh\";\n      iconClasses = \"audio-refresh-animate\";\n    } else {\n      iconName = isShowPlayBtn ? \"play\" : \"pause\";\n    }\n\n    var songIndex = this.props.currentSongIndex;\n    var buttonPanelClasses = \"audio-button-panel pull-left\";\n\n    if (this.props.songCount < 2) {\n      return (\n        <ButtonGroup className={buttonPanelClasses}>\n          <Button bsSize=\"small\" onClick={buttonClickHandler}>\n            <Glyphicon className={iconClasses} glyph={iconName} />\n          </Button>\n        </ButtonGroup>\n      );\n    } else {\n      var nextButtonClass =\n        songIndex == this.props.songCount - 1 ? \"disabled\" : \"\";\n\n      return (\n        <ButtonGroup className={buttonPanelClasses}>\n          <Button bsSize=\"small\" onClick={this.props.onPrevBtnClick}>\n            <Glyphicon glyph=\"step-backward\" />\n          </Button>\n          <Button bsSize=\"small\" onClick={buttonClickHandler}>\n            <Glyphicon className={iconClasses} glyph={iconName} />\n          </Button>\n          <Button\n            bsSize=\"small\"\n            onClick={this.props.onNextBtnClick}\n            className={nextButtonClass}\n          >\n            <Glyphicon glyph=\"step-forward\" />\n          </Button>\n        </ButtonGroup>\n      );\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}