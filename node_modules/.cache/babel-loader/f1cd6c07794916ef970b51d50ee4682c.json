{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongItem.js\";\n\nvar React = require('react/addons');\n\nvar classnames = require(\"classnames\");\n\nvar MenuItem = require(\"react-bootstrap/MenuItem\");\n\nvar Glyphicon = require('react-bootstrap/Glyphicon');\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n  render: function () {\n    var currentSongIndex = this.props.currentSongIndex;\n    var isSelected = this.props.currentSongIndex == this.props.eventKey;\n    var components = [];\n\n    if (isSelected && this.props.isPlaying) {\n      components[0] = React.createElement(Glyphicon, {\n        className: \"audio-song-item-icon active\",\n        glyph: \"play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    } else {\n      components[0] = React.createElement(\"span\", {\n        className: \"audio-song-item-not-selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n\n    components[1] = React.createElement(\"span\", {\n      className: \"audio-song-item-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.name);\n    var classes = classnames({\n      'audio-song-item': true,\n      'active': isSelected\n    });\n    return React.createElement(MenuItem, {\n      className: classes,\n      eventKey: this.props.eventKey,\n      onClick: this.props.onSongItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, components);\n  }\n});","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/SongItem.js"],"names":["React","require","classnames","MenuItem","Glyphicon","module","exports","createClass","render","currentSongIndex","props","isSelected","eventKey","components","isPlaying","name","classes","onSongItemClick"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,2BAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiBN,KAAK,CAACO,WAAN,CAAkB;AAAA;AAClCC,EAAAA,MAAM,EAAE,YAAW;AAElB,QAAIC,gBAAgB,GAAG,KAAKC,KAAL,CAAWD,gBAAlC;AACA,QAAIE,UAAU,GAAG,KAAKD,KAAL,CAAWD,gBAAX,IAA+B,KAAKC,KAAL,CAAWE,QAA3D;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAIF,UAAU,IAAI,KAAKD,KAAL,CAAWI,SAA7B,EAAwC;AACvCD,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,6BAArB;AAAmD,QAAA,KAAK,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACA,KAFD,MAEO;AACNA,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACA;;AAEDA,IAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKH,KAAL,CAAWK,IAArD,CAAhB;AAEA,QAAIC,OAAO,GAAGd,UAAU,CAAC;AACvB,yBAAmB,IADI;AAEvB,gBAAUS;AAFa,KAAD,CAAxB;AAKA,WACC,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEK,OAArB;AAA8B,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWE,QAAnD;AAA6D,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWO,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,UADH,CADD;AAKA;AAzBiC,CAAlB,CAAjB","sourcesContent":["var React = require('react/addons');\nvar classnames = require(\"classnames\");\nvar MenuItem = require(\"react-bootstrap/MenuItem\");\nvar Glyphicon = require('react-bootstrap/Glyphicon');\n\nmodule.exports = React.createClass({\n\trender: function() {\n\n\t\tvar currentSongIndex = this.props.currentSongIndex;\n\t\tvar isSelected = this.props.currentSongIndex == this.props.eventKey;\n\t\tvar components = [];\n\n\t\tif (isSelected && this.props.isPlaying) {\n\t\t\tcomponents[0] = <Glyphicon className=\"audio-song-item-icon active\" glyph=\"play\" />;\n\t\t} else {\n\t\t\tcomponents[0] = <span className=\"audio-song-item-not-selected\"></span>;\n\t\t}\n\n\t\tcomponents[1] = <span className=\"audio-song-item-label\" >{this.props.name}</span>;\n\t\t\n\t\tvar classes = classnames({\n  \t\t'audio-song-item': true,\n  \t\t'active': isSelected,\n\t\t});\n\n\t\treturn (\n\t\t\t<MenuItem className={classes} eventKey={this.props.eventKey} onClick={this.props.onSongItemClick} > \n\t\t\t\t{ components }\n\t\t\t</MenuItem>\n\t\t);\n\t}\n})"]},"metadata":{},"sourceType":"module"}