{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/ButtonPanel.js\";\n\nvar React = require('react/addons');\n\nvar Button = require('react-bootstrap/Button');\n\nvar Glyphicon = require('react-bootstrap/Glyphicon');\n\nvar ButtonGroup = require('react-bootstrap/ButtonGroup');\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n  getDefaultProps: function () {\n    return {\n      currentSongIndex: 0,\n      songCount: 0\n    };\n  },\n  render: function () {\n    var isPlaying = this.props.isPlaying;\n    var isPause = this.props.isPause;\n    var isLoading = this.props.isLoading;\n    var isShowPlayBtn = !isPlaying || isPause;\n    var buttonClickHandler = isShowPlayBtn ? this.props.onPlayBtnClick : this.props.onPauseBtnClick;\n    var iconName;\n    var iconClasses = \"\";\n\n    if (isLoading) {\n      iconName = \"refresh\";\n      iconClasses = \"audio-refresh-animate\";\n    } else {\n      iconName = isShowPlayBtn ? \"play\" : \"pause\";\n    }\n\n    var songIndex = this.props.currentSongIndex;\n    var buttonPanelClasses = \"audio-button-panel pull-left\";\n\n    if (this.props.songCount < 2) {\n      return React.createElement(ButtonGroup, {\n        className: buttonPanelClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: buttonClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        className: iconClasses,\n        glyph: iconName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    } else {\n      var nextButtonClass = songIndex == this.props.songCount - 1 ? \"disabled\" : \"\";\n      return React.createElement(ButtonGroup, {\n        className: buttonPanelClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: this.props.onPrevBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        glyph: \"step-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: buttonClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        className: iconClasses,\n        glyph: iconName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(Button, {\n        bsSize: \"small\",\n        onClick: this.props.onNextBtnClick,\n        className: nextButtonClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Glyphicon, {\n        glyph: \"step-forward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }\n});","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/components/ButtonPanel.js"],"names":["React","require","Button","Glyphicon","ButtonGroup","module","exports","createClass","getDefaultProps","currentSongIndex","songCount","render","isPlaying","props","isPause","isLoading","isShowPlayBtn","buttonClickHandler","onPlayBtnClick","onPauseBtnClick","iconName","iconClasses","songIndex","buttonPanelClasses","nextButtonClass","onPrevBtnClick","onNextBtnClick"],"mappings":"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","sourcesContent":["var React = require('react/addons');\nvar Button = require('react-bootstrap/Button');\nvar Glyphicon = require('react-bootstrap/Glyphicon');\nvar ButtonGroup = require('react-bootstrap/ButtonGroup');\n\nmodule.exports = React.createClass({\n\n\tgetDefaultProps: function() {\n\t\treturn {\n\t\t\tcurrentSongIndex: 0,\n\t\t\tsongCount: 0\n\t\t};\n\t},\n\n\trender: function() {\n\n\t\tvar isPlaying = this.props.isPlaying;\n\t\tvar isPause = this.props.isPause;\n\t\tvar isLoading = this.props.isLoading;\n\t\tvar isShowPlayBtn = !isPlaying || isPause;\n\t\tvar buttonClickHandler = isShowPlayBtn ? this.props.onPlayBtnClick : this.props.onPauseBtnClick;\n\t\tvar iconName;\n\t\tvar iconClasses = \"\";\n\n\t\tif (isLoading) {\n\t\t\ticonName = \"refresh\";\n\t\t\ticonClasses = \"audio-refresh-animate\";\n\t\t} else {\n\t\t\ticonName = isShowPlayBtn ? \"play\" : \"pause\";\n\t\t}\n\n\t\tvar songIndex = this.props.currentSongIndex;\n\t\tvar buttonPanelClasses = \"audio-button-panel pull-left\";\n\n\t\tif (this.props.songCount < 2) {\n\t\t\treturn (\n\t\t\t\t<ButtonGroup className={buttonPanelClasses}>\n\t\t\t\t\t<Button bsSize=\"small\" onClick={buttonClickHandler}>\n\t\t\t\t\t\t<Glyphicon className={iconClasses} glyph={iconName} />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t);\n\t\t} else {\n\n\t\t\tvar nextButtonClass = songIndex == this.props.songCount - 1 ? \"disabled\" : \"\";\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<ButtonGroup className={buttonPanelClasses}>\n\t\t\t\t\t<Button bsSize=\"small\" onClick={this.props.onPrevBtnClick}>\n\t\t\t\t\t\t<Glyphicon glyph=\"step-backward\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button bsSize=\"small\" onClick={buttonClickHandler}>\n\t\t\t\t\t\t<Glyphicon className={iconClasses} glyph={iconName} />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button bsSize=\"small\" onClick={this.props.onNextBtnClick} className={nextButtonClass}>\n\t\t\t\t\t\t<Glyphicon glyph=\"step-forward\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t);\n\t\t}\n\t}\n});"]},"metadata":{},"sourceType":"module"}