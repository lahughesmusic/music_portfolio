{"ast":null,"code":"module.exports = {\n  secondsToTime: function (secs) {\n    secs = Math.round(secs);\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var time = \"\";\n\n    if (hours > 0) {\n      time += hours + \":\";\n    }\n\n    time += this.timeUnitFormat(minutes) + \":\";\n    time += this.timeUnitFormat(seconds);\n    return time;\n  },\n  timeUnitFormat: function (time) {\n    if (time < 1) {\n      return \"00\";\n    } else if (time < 10) {\n      return \"0\" + time;\n    } else {\n      return time;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Media/react-audio-player/js/mixins/TimeFormatterMixin.js"],"names":["module","exports","secondsToTime","secs","Math","round","hours","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","time","timeUnitFormat"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAkB;AAEjBC,EAAAA,aAAa,EAAE,UAASC,IAAT,EAAe;AAC7BA,IAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACM,QAAIG,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ;AAEA,QAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,QAAIM,OAAO,GAAGL,IAAI,CAACG,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;AAEA,QAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;AACA,QAAIG,OAAO,GAAGP,IAAI,CAACQ,IAAL,CAAUF,mBAAV,CAAd;AAEA,QAAIG,IAAI,GAAG,EAAX;;AAEA,QAAGP,KAAK,GAAG,CAAX,EAAc;AACZO,MAAAA,IAAI,IAAIP,KAAK,GAAG,GAAhB;AACD;;AAEDO,IAAAA,IAAI,IAAI,KAAKC,cAAL,CAAoBL,OAApB,IAA+B,GAAvC;AACAI,IAAAA,IAAI,IAAI,KAAKC,cAAL,CAAoBH,OAApB,CAAR;AACA,WAAOE,IAAP;AACN,GArBgB;AAuBdC,EAAAA,cAAc,EAAC,UAASD,IAAT,EAAe;AAC1B,QAAIA,IAAI,GAAG,CAAX,EAAc;AACV,aAAO,IAAP;AACH,KAFD,MAEO,IAAIA,IAAI,GAAG,EAAX,EAAe;AAClB,aAAO,MAAMA,IAAb;AACH,KAFM,MAEA;AACH,aAAOA,IAAP;AACH;AACJ;AA/Ba,CAAlB","sourcesContent":["module.exports =  {\n\n\tsecondsToTime: function(secs) {\n\t\tsecs = Math.round(secs);\n        var hours = Math.floor(secs / (60 * 60));\n\n        var divisor_for_minutes = secs % (60 * 60);\n        var minutes = Math.floor(divisor_for_minutes / 60);\n\n        var divisor_for_seconds = divisor_for_minutes % 60;\n        var seconds = Math.ceil(divisor_for_seconds);\n\n        var time = \"\";\n\n        if(hours > 0) {\n          time += hours + \":\";\n        }\n\n        time += this.timeUnitFormat(minutes) + \":\";\n        time += this.timeUnitFormat(seconds);\n        return time; \n\t},\n\n    timeUnitFormat:function(time) {\n        if (time < 1) {\n            return \"00\";\n        } else if (time < 10) {\n            return \"0\" + time;\n        } else {\n            return time;\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}