{"ast":null,"code":"var _jsxFileName = \"/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Header.js\";\nimport React from \"react\";\nimport { ActionList, Navigation, FormLayout, TextField, Page, SkeletonPage, SkeletonDisplayText, Modal, Card, TopBar, Toast, ContextualSaveBar, Layout, SkeletonBodyText, AppProvider, Frame, TextContainer, Loading } from \"@shopify/polaris\";\n\nclass FrameExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.defaultState = {\n      emailFieldValue: \"the.musical.dev@gmail.com\",\n      nameFieldValue: \"Lea Hughes\"\n    };\n    this.state = {\n      showToast: false,\n      isLoading: false,\n      isDirty: false,\n      searchActive: false,\n      searchText: \"\",\n      userMenuOpen: false,\n      showMobileNavigation: false,\n      modalActive: false,\n      nameFieldValue: this.defaultState.nameFieldValue,\n      emailFieldValue: this.defaultState.emailFieldValue,\n      storeName: this.defaultState.nameFieldValue,\n      supportSubject: \"\",\n      supportMessage: \"\"\n    };\n    this.skipToContentRef = React.createRef();\n\n    this.toggleState = key => {\n      return () => {\n        this.setState(prevState => ({\n          [key]: !prevState[key]\n        }));\n      };\n    };\n\n    this.handleSearchFieldChange = value => {\n      this.setState({\n        searchText: value\n      });\n\n      if (value.length > 0) {\n        this.setState({\n          searchActive: true\n        });\n      } else {\n        this.setState({\n          searchActive: false\n        });\n      }\n    };\n\n    this.handleSearchResultsDismiss = () => {\n      this.setState(() => {\n        return {\n          searchActive: false,\n          searchText: \"\"\n        };\n      });\n    };\n\n    this.handleEmailFieldChange = emailFieldValue => {\n      this.setState({\n        emailFieldValue\n      });\n\n      if (emailFieldValue != \"\") {\n        this.setState({\n          isDirty: true\n        });\n      }\n    };\n\n    this.handleNameFieldChange = nameFieldValue => {\n      this.setState({\n        nameFieldValue\n      });\n\n      if (nameFieldValue != \"\") {\n        this.setState({\n          isDirty: true\n        });\n      }\n    };\n\n    this.handleSave = () => {\n      this.defaultState.nameFieldValue = this.state.nameFieldValue;\n      this.defaultState.emailFieldValue = this.state.emailFieldValue;\n      this.setState({\n        isDirty: false,\n        showToast: true,\n        storeName: this.defaultState.nameFieldValue\n      });\n    };\n\n    this.handleDiscard = () => {\n      this.setState({\n        emailFieldValue: this.defaultState.emailFieldValue,\n        nameFieldValue: this.defaultState.nameFieldValue,\n        isDirty: false\n      });\n    };\n\n    this.handleSubjectChange = supportSubject => {\n      this.setState({\n        supportSubject\n      });\n    };\n\n    this.handleMessageChange = supportMessage => {\n      this.setState({\n        supportMessage\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          showToast = _this$state.showToast,\n          isLoading = _this$state.isLoading,\n          isDirty = _this$state.isDirty,\n          searchActive = _this$state.searchActive,\n          searchText = _this$state.searchText,\n          userMenuOpen = _this$state.userMenuOpen,\n          showMobileNavigation = _this$state.showMobileNavigation,\n          nameFieldValue = _this$state.nameFieldValue,\n          emailFieldValue = _this$state.emailFieldValue,\n          modalActive = _this$state.modalActive,\n          storeName = _this$state.storeName;\n    const toastMarkup = showToast ? React.createElement(Toast, {\n      onDismiss: this.toggleState(\"showToast\"),\n      content: \"Changes saved\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : null;\n    const userMenuActions = [{\n      items: [{\n        content: \"Community forums\"\n      }]\n    }];\n    const contextualSaveBarMarkup = isDirty ? React.createElement(ContextualSaveBar, {\n      message: \"Unsaved changes\",\n      saveAction: {\n        onAction: this.handleSave\n      },\n      discardAction: {\n        onAction: this.handleDiscard\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : null;\n    const userMenuMarkup = React.createElement(TopBar.UserMenu, {\n      actions: userMenuActions,\n      name: \"Raksha\",\n      detail: storeName,\n      initials: \"D\",\n      open: userMenuOpen,\n      onToggle: this.toggleState(\"userMenuOpen\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    });\n    const searchResultsMarkup = React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ActionList, {\n      items: [{\n        content: \"Shopify help center\"\n      }, {\n        content: \"Community forums\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n    const searchFieldMarkup = React.createElement(TopBar.SearchField, {\n      onChange: this.handleSearchFieldChange,\n      value: searchText,\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n    const topBarMarkup = React.createElement(TopBar, {\n      showNavigationToggle: true,\n      userMenu: userMenuMarkup,\n      searchResultsVisible: searchActive,\n      searchField: searchFieldMarkup,\n      searchResults: searchResultsMarkup,\n      onSearchResultsDismiss: this.handleSearchResultsDismiss,\n      onNavigationToggle: this.toggleState(\"showMobileNavigation\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n    const navigationMarkup = React.createElement(Navigation, {\n      location: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Navigation.Section, {\n      items: [{\n        label: \"Back to Shopify\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Navigation.Section, {\n      separator: true,\n      title: \"Cube \",\n      items: [{\n        label: \"Dashboard\",\n        onClick: this.toggleState(\"isLoading\")\n      }, {\n        label: \"Raksha Orders\",\n        onClick: this.toggleState(\"isLoading\")\n      }],\n      action: {\n        accessibilityLabel: \"Contact support\",\n        onClick: this.toggleState(\"modalActive\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n    const loadingMarkup = isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : null;\n    const skipToContentTarget = React.createElement(\"a\", {\n      id: \"SkipToContentTarget\",\n      ref: this.skipToContentRef,\n      tabIndex: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    });\n    const actualPageMarkup = React.createElement(Page, {\n      title: \"Account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, skipToContentTarget, React.createElement(Layout.AnnotatedSection, {\n      title: \"Account details\",\n      description: \"Raksha will use this as your account information.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Card, {\n      sectioned: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(FormLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Full name\",\n      value: nameFieldValue,\n      onChange: this.handleNameFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"email\",\n      label: \"Email\",\n      value: emailFieldValue,\n      onChange: this.handleEmailFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))))));\n    const loadingPageMarkup = React.createElement(SkeletonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Layout.Section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Card, {\n      sectioned: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(TextContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(SkeletonDisplayText, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(SkeletonBodyText, {\n      lines: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))))));\n    const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n    const modalMarkup = React.createElement(Modal, {\n      open: modalActive,\n      onClose: this.toggleState(\"modalActive\"),\n      title: \"Contact support\",\n      primaryAction: {\n        content: \"Send\",\n        onAction: this.toggleState(\"modalActive\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Modal.Section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(FormLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Subject\",\n      value: this.state.supportSubject,\n      onChange: this.handleSubjectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"Message\",\n      value: this.state.supportMessage,\n      onChange: this.handleMessageChange,\n      multiline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))));\n    const theme = {\n      colors: {\n        topBar: {\n          background: \"#357997\"\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      style: {\n        height: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(AppProvider, {\n      theme: theme,\n      i18n: {\n        Polaris: {\n          Avatar: {\n            label: \"Avatar\",\n            labelWithInitials: \"Avatar with initials {initials}\"\n          },\n          ContextualSaveBar: {\n            save: \"Save\",\n            discard: \"Discard\"\n          },\n          TextField: {\n            characterCount: \"{count} characters\"\n          },\n          TopBar: {\n            toggleMenuLabel: \"Toggle menu\",\n            SearchField: {\n              clearButtonLabel: \"Clear\",\n              search: \"Search\"\n            }\n          },\n          Modal: {\n            iFrameTitle: \"body markup\"\n          },\n          Frame: {\n            skipToContent: \"Skip to content\",\n            Navigation: {\n              closeMobileNavigationLabel: \"Close navigation\"\n            }\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Frame, {\n      topBar: topBarMarkup,\n      navigation: navigationMarkup,\n      showMobileNavigation: showMobileNavigation,\n      onNavigationDismiss: this.toggleState(\"showMobileNavigation\"),\n      skipToContentTarget: this.skipToContentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, contextualSaveBarMarkup, loadingMarkup, pageMarkup, toastMarkup, modalMarkup)));\n  }\n\n}\n\nexport default FrameExample;","map":{"version":3,"sources":["/Users/leahughes/Desktop/react_polaris/react_polaris/src/components/Header.js"],"names":["React","ActionList","Navigation","FormLayout","TextField","Page","SkeletonPage","SkeletonDisplayText","Modal","Card","TopBar","Toast","ContextualSaveBar","Layout","SkeletonBodyText","AppProvider","Frame","TextContainer","Loading","FrameExample","Component","defaultState","emailFieldValue","nameFieldValue","state","showToast","isLoading","isDirty","searchActive","searchText","userMenuOpen","showMobileNavigation","modalActive","storeName","supportSubject","supportMessage","skipToContentRef","createRef","toggleState","key","setState","prevState","handleSearchFieldChange","value","length","handleSearchResultsDismiss","handleEmailFieldChange","handleNameFieldChange","handleSave","handleDiscard","handleSubjectChange","handleMessageChange","render","toastMarkup","userMenuActions","items","content","contextualSaveBarMarkup","onAction","userMenuMarkup","searchResultsMarkup","searchFieldMarkup","topBarMarkup","navigationMarkup","label","onClick","accessibilityLabel","loadingMarkup","skipToContentTarget","actualPageMarkup","loadingPageMarkup","pageMarkup","modalMarkup","theme","colors","topBar","background","height","Polaris","Avatar","labelWithInitials","save","discard","characterCount","toggleMenuLabel","SearchField","clearButtonLabel","search","iFrameTitle","skipToContent","closeMobileNavigationLabel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ActionList,\n  Navigation,\n  FormLayout,\n  TextField,\n  Page,\n  SkeletonPage,\n  SkeletonDisplayText,\n  Modal,\n  Card,\n  TopBar,\n  Toast,\n  ContextualSaveBar,\n  Layout,\n  SkeletonBodyText,\n  AppProvider,\n  Frame,\n  TextContainer,\n  Loading\n} from \"@shopify/polaris\";\n\nclass FrameExample extends React.Component {\n  defaultState = {\n    emailFieldValue: \"the.musical.dev@gmail.com\",\n    nameFieldValue: \"Lea Hughes\"\n  };\n  state = {\n    showToast: false,\n    isLoading: false,\n    isDirty: false,\n    searchActive: false,\n    searchText: \"\",\n    userMenuOpen: false,\n    showMobileNavigation: false,\n    modalActive: false,\n    nameFieldValue: this.defaultState.nameFieldValue,\n    emailFieldValue: this.defaultState.emailFieldValue,\n    storeName: this.defaultState.nameFieldValue,\n    supportSubject: \"\",\n    supportMessage: \"\"\n  };\n  skipToContentRef = React.createRef();\n  render() {\n    const {\n      showToast,\n      isLoading,\n      isDirty,\n      searchActive,\n      searchText,\n      userMenuOpen,\n      showMobileNavigation,\n      nameFieldValue,\n      emailFieldValue,\n      modalActive,\n      storeName\n    } = this.state;\n    const toastMarkup = showToast ? (\n      <Toast\n        onDismiss={this.toggleState(\"showToast\")}\n        content=\"Changes saved\"\n      />\n    ) : null;\n    const userMenuActions = [\n      {\n        items: [{ content: \"Community forums\" }]\n      }\n    ];\n    const contextualSaveBarMarkup = isDirty ? (\n      <ContextualSaveBar\n        message=\"Unsaved changes\"\n        saveAction={{\n          onAction: this.handleSave\n        }}\n        discardAction={{\n          onAction: this.handleDiscard\n        }}\n      />\n    ) : null;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={userMenuActions}\n        name=\"Raksha\"\n        detail={storeName}\n        initials=\"D\"\n        open={userMenuOpen}\n        onToggle={this.toggleState(\"userMenuOpen\")}\n      />\n    );\n    const searchResultsMarkup = (\n      <Card>\n        <ActionList\n          items={[\n            { content: \"Shopify help center\" },\n            { content: \"Community forums\" }\n          ]}\n        />\n      </Card>\n    );\n    const searchFieldMarkup = (\n      <TopBar.SearchField\n        onChange={this.handleSearchFieldChange}\n        value={searchText}\n        placeholder=\"Search\"\n      />\n    );\n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle={true}\n        userMenu={userMenuMarkup}\n        searchResultsVisible={searchActive}\n        searchField={searchFieldMarkup}\n        searchResults={searchResultsMarkup}\n        onSearchResultsDismiss={this.handleSearchResultsDismiss}\n        onNavigationToggle={this.toggleState(\"showMobileNavigation\")}\n      />\n    );\n    const navigationMarkup = (\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              label: \"Back to Shopify\"\n            }\n          ]}\n        />\n        <Navigation.Section\n          separator\n          title=\"Cube \"\n          items={[\n            {\n              label: \"Dashboard\",\n              onClick: this.toggleState(\"isLoading\")\n            },\n            {\n              label: \"Raksha Orders\",\n              onClick: this.toggleState(\"isLoading\")\n            }\n          ]}\n          action={{\n            accessibilityLabel: \"Contact support\",\n            onClick: this.toggleState(\"modalActive\")\n          }}\n        />\n      </Navigation>\n    );\n    const loadingMarkup = isLoading ? <Loading /> : null;\n    const skipToContentTarget = (\n      <a id=\"SkipToContentTarget\" ref={this.skipToContentRef} tabIndex={-1} />\n    );\n    const actualPageMarkup = (\n      <Page title=\"Account\">\n        <Layout>\n          {skipToContentTarget}\n          <Layout.AnnotatedSection\n            title=\"Account details\"\n            description=\"Raksha will use this as your account information.\"\n          >\n            <Card sectioned>\n              <FormLayout>\n                <TextField\n                  label=\"Full name\"\n                  value={nameFieldValue}\n                  onChange={this.handleNameFieldChange}\n                />\n                <TextField\n                  type=\"email\"\n                  label=\"Email\"\n                  value={emailFieldValue}\n                  onChange={this.handleEmailFieldChange}\n                />\n              </FormLayout>\n            </Card>\n          </Layout.AnnotatedSection>\n        </Layout>\n      </Page>\n    );\n    const loadingPageMarkup = (\n      <SkeletonPage>\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n    const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n    const modalMarkup = (\n      <Modal\n        open={modalActive}\n        onClose={this.toggleState(\"modalActive\")}\n        title=\"Contact support\"\n        primaryAction={{\n          content: \"Send\",\n          onAction: this.toggleState(\"modalActive\")\n        }}\n      >\n        <Modal.Section>\n          <FormLayout>\n            <TextField\n              label=\"Subject\"\n              value={this.state.supportSubject}\n              onChange={this.handleSubjectChange}\n            />\n            <TextField\n              label=\"Message\"\n              value={this.state.supportMessage}\n              onChange={this.handleMessageChange}\n              multiline\n            />\n          </FormLayout>\n        </Modal.Section>\n      </Modal>\n    );\n    const theme = {\n      colors: {\n        topBar: {\n          background: \"#357997\"\n        }\n      }\n    };\n    return (\n      <div style={{ height: \"500px\" }}>\n        <AppProvider\n          theme={theme}\n          i18n={{\n            Polaris: {\n              Avatar: {\n                label: \"Avatar\",\n                labelWithInitials: \"Avatar with initials {initials}\"\n              },\n              ContextualSaveBar: {\n                save: \"Save\",\n                discard: \"Discard\"\n              },\n              TextField: {\n                characterCount: \"{count} characters\"\n              },\n              TopBar: {\n                toggleMenuLabel: \"Toggle menu\",\n                SearchField: {\n                  clearButtonLabel: \"Clear\",\n                  search: \"Search\"\n                }\n              },\n              Modal: {\n                iFrameTitle: \"body markup\"\n              },\n              Frame: {\n                skipToContent: \"Skip to content\",\n                Navigation: {\n                  closeMobileNavigationLabel: \"Close navigation\"\n                }\n              }\n            }\n          }}\n        >\n          <Frame\n            topBar={topBarMarkup}\n            navigation={navigationMarkup}\n            showMobileNavigation={showMobileNavigation}\n            onNavigationDismiss={this.toggleState(\"showMobileNavigation\")}\n            skipToContentTarget={this.skipToContentRef}\n          >\n            {contextualSaveBarMarkup}\n            {loadingMarkup}\n            {pageMarkup}\n            {toastMarkup}\n            {modalMarkup}\n          </Frame>\n        </AppProvider>\n      </div>\n    );\n  }\n\n  toggleState = key => {\n    return () => {\n      this.setState(prevState => ({ [key]: !prevState[key] }));\n    };\n  };\n  handleSearchFieldChange = value => {\n    this.setState({ searchText: value });\n    if (value.length > 0) {\n      this.setState({ searchActive: true });\n    } else {\n      this.setState({ searchActive: false });\n    }\n  };\n  handleSearchResultsDismiss = () => {\n    this.setState(() => {\n      return {\n        searchActive: false,\n        searchText: \"\"\n      };\n    });\n  };\n  handleEmailFieldChange = emailFieldValue => {\n    this.setState({ emailFieldValue });\n    if (emailFieldValue != \"\") {\n      this.setState({ isDirty: true });\n    }\n  };\n  handleNameFieldChange = nameFieldValue => {\n    this.setState({ nameFieldValue });\n    if (nameFieldValue != \"\") {\n      this.setState({ isDirty: true });\n    }\n  };\n  handleSave = () => {\n    this.defaultState.nameFieldValue = this.state.nameFieldValue;\n    this.defaultState.emailFieldValue = this.state.emailFieldValue;\n    this.setState({\n      isDirty: false,\n      showToast: true,\n      storeName: this.defaultState.nameFieldValue\n    });\n  };\n  handleDiscard = () => {\n    this.setState({\n      emailFieldValue: this.defaultState.emailFieldValue,\n      nameFieldValue: this.defaultState.nameFieldValue,\n      isDirty: false\n    });\n  };\n  handleSubjectChange = supportSubject => {\n    this.setState({ supportSubject });\n  };\n  handleMessageChange = supportMessage => {\n    this.setState({ supportMessage });\n  };\n}\n\nexport default FrameExample;\n"]},"metadata":{},"sourceType":"module"}