{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _getVimeoId = require('../utils/get-vimeo-id');\n\nvar _getVimeoId2 = _interopRequireDefault(_getVimeoId);\n\nvar _vendorPropTypes = require('./vendor-prop-types');\n\nvar _vendorPropTypes2 = _interopRequireDefault(_vendorPropTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Vimeo = function (_Component) {\n  _inherits(Vimeo, _Component);\n\n  function Vimeo() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Vimeo);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Vimeo.__proto__ || Object.getPrototypeOf(Vimeo)).call.apply(_ref, [this].concat(args))), _this), _this._vimeoId = (0, _getVimeoId2.default)(_this.props.src), _this._origin = '*', _this._onMessage = function (e) {\n      var data = void 0; // allow messages from the Vimeo player only\n\n      if (!/^https?:\\/\\/player.vimeo.com/.test(e.origin)) {\n        return false;\n      }\n\n      if (_this._origin === '*') {\n        _this._origin = e.origin;\n      }\n\n      try {\n        data = JSON.parse(e.data);\n      } catch (err) {\n        _this.props.onError(err);\n      }\n\n      if (data) {\n        switch (data.event) {\n          case 'ready':\n            _this._postOnReadyMessages();\n\n            break;\n\n          case 'loadProgress':\n            _this.props.onProgress(data.data.percent);\n\n            break;\n\n          case 'playProgress':\n            _this.props.onTimeUpdate(data.data.seconds);\n\n            break;\n\n          case 'play':\n            _this.props.onPlay(true);\n\n            break;\n\n          case 'pause':\n            _this.props.onPause(false);\n\n            break;\n\n          case 'finish':\n            _this.props.onEnded(false);\n\n            break;\n        }\n\n        if (data.method === 'getDuration') {\n          _this.props.onDuration(data.value);\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Vimeo, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('message', this._onMessage);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.src !== this.props.src) {\n        this._vimeoId = (0, _getVimeoId2.default)(nextProps.src);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('message', this._onMessage);\n    }\n  }, {\n    key: '_postMessage',\n    value: function _postMessage(method, value) {\n      var data = {\n        method: method\n      };\n\n      if (value) {\n        data.value = value;\n      }\n\n      this._iframe.contentWindow.postMessage(JSON.stringify(data), this._origin);\n    }\n  }, {\n    key: '_postOnReadyMessages',\n    value: function _postOnReadyMessages() {\n      var _this2 = this;\n\n      ;\n      ['loadProgress', 'playProgress', 'play', 'pause', 'finish'].forEach(function (listener) {\n        return _this2._postMessage('addEventListener', listener);\n      });\n\n      this._postMessage('getDuration');\n\n      this.props.onReady();\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      this._postMessage('play');\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._postMessage('pause');\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this._postMessage('unload');\n    }\n  }, {\n    key: 'seekTo',\n    value: function seekTo(currentTime) {\n      this._postMessage('seekTo', currentTime);\n    }\n  }, {\n    key: 'mute',\n    value: function mute(muted) {\n      this._postMessage('setVolume', muted ? '0' : '1');\n\n      this.props.onMute(muted);\n      this.props.onVolumeChange(muted ? 0 : 1);\n    }\n  }, {\n    key: 'setVolume',\n    value: function setVolume(volume) {\n      this._postMessage('setVolume', volume);\n\n      this.props.onVolumeChange(+volume);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement('iframe', _extends({\n        ref: function ref(c) {\n          return _this3._iframe = c;\n        },\n        src: 'https://player.vimeo.com/video/' + this._vimeoId + '?api=1'\n      }, this.props.extraProps));\n    }\n  }, {\n    key: 'instance',\n    get: function get() {\n      return this._iframe;\n    }\n  }, {\n    key: 'node',\n    get: function get() {\n      return (0, _reactDom.findDOMNode)(this._iframe);\n    }\n  }]);\n\n  return Vimeo;\n}(_react.Component);\n\nVimeo.propTypes = _vendorPropTypes2.default;\nexports.default = Vimeo;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}