{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Timer = function (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    _classCallCheck(this, Timer);\n\n    return _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).apply(this, arguments));\n  }\n\n  _createClass(Timer, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          currentTime = _props.currentTime,\n          className = _props.className,\n          style = _props.style,\n          soundCloudAudio = _props.soundCloudAudio;\n      var duration = this.props.duration;\n      var classNames = (0, _classnames2.default)('sb-soundplayer-timer', className);\n\n      if (!duration && soundCloudAudio && soundCloudAudio.duration) {\n        duration = soundCloudAudio.duration;\n      }\n\n      return _react2.default.createElement('div', {\n        className: classNames,\n        style: style\n      }, Timer.prettyTime(currentTime), ' / ', Timer.prettyTime(duration));\n    }\n  }], [{\n    key: 'prettyTime',\n    value: function prettyTime(time) {\n      var hours = Math.floor(time / 3600);\n      var mins = '0' + Math.floor(time % 3600 / 60);\n      var secs = '0' + Math.floor(time % 60);\n      mins = mins.substr(mins.length - 2);\n      secs = secs.substr(secs.length - 2);\n\n      if (!isNaN(secs)) {\n        if (hours) {\n          return hours + ':' + mins + ':' + secs;\n        }\n\n        return mins + ':' + secs;\n      }\n\n      return '00:00';\n    }\n  }]);\n\n  return Timer;\n}(_react.Component);\n\nTimer.propTypes = {\n  className: _propTypes2.default.string,\n  duration: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  currentTime: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n};\nTimer.defaultProps = {\n  duration: 0,\n  currentTime: 0\n};\nexports.default = Timer;","map":null,"metadata":{},"sourceType":"script"}